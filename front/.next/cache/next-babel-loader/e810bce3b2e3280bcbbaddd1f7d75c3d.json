{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ansej\\\\\\uACF5\\uBD80\\uD55C\\uAC83\\uB4E4\\\\lolMatch\\\\front\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport PropTypes from 'prop-types';\n\nvar LolMatch = function LolMatch(_ref) {\n  var Component = _ref.Component;\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"NodeBird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n};\n\nLolMatch.propTypes = {\n  Component: PropTypes.elementType.isRequired\n};\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware(); // 여기에다가 store 커스터마이징.\n\n  var middlewares = [sagaMiddleware]; // 변조하거나 기능을 추가.\n\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), true && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  }); // compose : 미들웨어끼리 합성,  applyMiddleware 미들웨어 적용\n\n  var store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga); // 루트사가 연결\n\n  return store; // store를 props로 받을 수 있음.\n};\n\nexport default withRedux(configureStore)(LolMatch);","map":{"version":3,"sources":["C:/Users/ansej/공부한것들/lolMatch/front/pages/_app.js"],"names":["React","Head","AppLayout","PropTypes","LolMatch","Component","propTypes","elementType","isRequired","configureStore","initialState","options","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","reducer","sagaTask","run","rootSaga","withRedux"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAChC,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,6DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ;AAWH,CAZD;;AAcAD,QAAQ,CAACE,SAAT,GAAqB;AACjBD,EAAAA,SAAS,EAAGF,SAAS,CAACI,WAAV,CAAsBC;AADjB,CAArB;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAeC,OAAf,EAA2B;AAC9C,MAAMC,cAAc,GAAGC,oBAAoB,EAA3C,CAD8C,CAE9C;;AACA,MAAMC,WAAW,GAAG,CAACF,cAAD,CAApB,CAH8C,CAGR;;AACtC,MAAMG,QAAQ,GAAG,QAAwCC,OAAO,CAACC,eAAe,MAAf,SAAmBH,WAAnB,CAAD,CAA/C,GACjBE,OAAO,CAACC,eAAe,MAAf,SAAmBH,WAAnB,CAAD,EACP,QAAiCI,MAAM,CAACC,4BAAP,KAAwC,WAAzE,GAAuFD,MAAM,CAACC,4BAAP,EAAvF,GACA,UAACC,CAAD;AAAA,WAAOA,CAAP;AAAA,GAFO,CADP,CAJ8C,CAOpC;;AACV,MAAMC,KAAK,GAAGC,WAAW,CAACC,OAAD,EAAUb,YAAV,EAAwBK,QAAxB,CAAzB;AACAM,EAAAA,KAAK,CAACG,QAAN,GAAiBZ,cAAc,CAACa,GAAf,CAAmBC,QAAnB,CAAjB,CAT8C,CASC;;AAC/C,SAAOL,KAAP,CAV8C,CAUhC;AACjB,CAXD;;AAaA,eAAeM,SAAS,CAAClB,cAAD,CAAT,CAA0BL,QAA1B,CAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LolMatch = ({ Component }) => {\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>NodeBird</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\"/>\r\n            </Head>\r\n            <AppLayout>\r\n                <Component/>\r\n            </AppLayout>\r\n        </>\r\n    )\r\n};\r\n\r\nLolMatch.propTypes = {\r\n    Component : PropTypes.elementType.isRequired, \r\n};\r\n\r\nconst configureStore = (initialState, options) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    // 여기에다가 store 커스터마이징.\r\n    const middlewares = [sagaMiddleware]; // 변조하거나 기능을 추가.\r\n    const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares)) :\r\n    compose(applyMiddleware(...middlewares),\r\n    typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : \r\n    (f) => f);// compose : 미들웨어끼리 합성,  applyMiddleware 미들웨어 적용\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga); // 루트사가 연결\r\n    return store; // store를 props로 받을 수 있음.\r\n};\r\n\r\nexport default withRedux(configureStore)(LolMatch);"]},"metadata":{},"sourceType":"module"}
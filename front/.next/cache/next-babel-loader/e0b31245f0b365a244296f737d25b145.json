{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ansej\\\\\\uACF5\\uBD80\\uD55C\\uAC83\\uB4E4\\\\lolMatch\\\\front\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport withRedux from 'next-redux-wrapper';\nimport { Provider } from 'react-redux';\nimport reducer from '../reducers';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport rootSaga from '../sagas';\nimport createSagaMiddleware from 'redux-saga';\nimport PropTypes from 'prop-types';\n\nvar LolMatch = function LolMatch(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store;\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"LolMatch\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n};\n\nLolMatch.propTypes = {\n  Component: PropTypes.elementType.isRequired\n};\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware(); // 여기에다가 store 커스터마이징.\n\n  var middlewares = [sagaMiddleware]; // 변조하거나 기능을 추가.\n\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), true && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  }); // compose : 미들웨어끼리 합성,  applyMiddleware 미들웨어 적용\n\n  var store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga); // 루트사가 연결\n\n  return store; // store를 props로 받을 수 있음.\n};\n\nexport default withRedux(configureStore)(LolMatch);","map":{"version":3,"sources":["C:/Users/ansej/공부한것들/lolMatch/front/pages/_app.js"],"names":["React","Head","AppLayout","withRedux","Provider","reducer","createStore","compose","applyMiddleware","rootSaga","createSagaMiddleware","PropTypes","LolMatch","Component","store","propTypes","elementType","isRequired","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA0B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACvC,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAIA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,6DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ;AAWH,CAZD;;AAcAF,QAAQ,CAACG,SAAT,GAAqB;AACjBF,EAAAA,SAAS,EAAGF,SAAS,CAACK,WAAV,CAAsBC;AADjB,CAArB;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAeC,OAAf,EAA2B;AAC9C,MAAMC,cAAc,GAAGX,oBAAoB,EAA3C,CAD8C,CAE9C;;AACA,MAAMY,WAAW,GAAG,CAACD,cAAD,CAApB,CAH8C,CAGR;;AACtC,MAAME,QAAQ,GAAG,QAAwChB,OAAO,CAACC,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CAA/C,GACjBf,OAAO,CAACC,eAAe,MAAf,SAAmBc,WAAnB,CAAD,EACP,QAAiCE,MAAM,CAACC,4BAAP,KAAwC,WAAzE,GAAuFD,MAAM,CAACC,4BAAP,EAAvF,GACA,UAACC,CAAD;AAAA,WAAOA,CAAP;AAAA,GAFO,CADP,CAJ8C,CAOpC;;AACV,MAAMZ,KAAK,GAAGR,WAAW,CAACD,OAAD,EAAUc,YAAV,EAAwBI,QAAxB,CAAzB;AACAT,EAAAA,KAAK,CAACa,QAAN,GAAiBN,cAAc,CAACO,GAAf,CAAmBnB,QAAnB,CAAjB,CAT8C,CASC;;AAC/C,SAAOK,KAAP,CAV8C,CAUhC;AACjB,CAXD;;AAaA,eAAeX,SAAS,CAACe,cAAD,CAAT,CAA0BN,QAA1B,CAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport AppLayout from '../components/AppLayout';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from '../reducers';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootSaga from '../sagas';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LolMatch = ({ Component, store }) => {\r\n    return (\r\n        <Provider store = {store}>\r\n            <Head>\r\n                <title>LolMatch</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.25.3/antd.css\"/>\r\n            </Head>\r\n            <AppLayout>\r\n                <Component/>\r\n            </AppLayout>\r\n        </Provider>\r\n    )\r\n};\r\n\r\nLolMatch.propTypes = {\r\n    Component : PropTypes.elementType.isRequired, \r\n};\r\n\r\nconst configureStore = (initialState, options) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    // 여기에다가 store 커스터마이징.\r\n    const middlewares = [sagaMiddleware]; // 변조하거나 기능을 추가.\r\n    const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares)) :\r\n    compose(applyMiddleware(...middlewares),\r\n    typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : \r\n    (f) => f);// compose : 미들웨어끼리 합성,  applyMiddleware 미들웨어 적용\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga); // 루트사가 연결\r\n    return store; // store를 props로 받을 수 있음.\r\n};\r\n\r\nexport default withRedux(configureStore)(LolMatch);"]},"metadata":{},"sourceType":"module"}